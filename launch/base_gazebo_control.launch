<?xml version="1.0"?>

<launch>

  <param name="robot_description" textfile="$(find mobile_manipulator_body)/urdf/robot_base.urdf" />
  <!-- <include file="$(find gazebo_ros)/launch/empty_world.launch"/> -->
    <!-- Gazebo post office environment -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find mobile_manipulator_body)/worlds/postoffice.world"/>
  </include>
  
  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />
  <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" args="-param robot_description -urdf -model robot_base" />
  <node pkg="robot_state_publisher" name="robot_state_publisher" type="robot_state_publisher" />
  
  <rosparam command="load" file="$(find mobile_manipulator_body)/config/control.yaml" />
  <node name="base_controller_spawner" pkg="controller_manager" type="spawner" args="robot_base_joint_publisher robot_base_velocity_controller"/>
   <!--Hector Slam Node  -->
  <include file="$(find mobile_manipulator_body)/launch/mobile_hector_slam.launch"/>
  <node name="rviz" pkg="rviz" type="rviz" args="-d $(find mobile_manipulator_body)/config/my_robot.rviz" required="true" />
    <!-- Extended Kalman Filter from robot_pose_ekf Node-->
  <!-- Subscribe: /odom, /imu_data, /vo -->
  <!-- Publish: /robot_pose_ekf/odom_combined -->
  <remap from="/odom" to="/robot_base_velocity_controller/odom" />
  <remap from="/imu" to="/imu_data" />
  <node pkg="robot_pose_ekf" type="robot_pose_ekf" name="robot_pose_ekf">
    <param name="output_frame" value="odom"/>
    <param name="base_footprint_frame" value="base_link"/>
    <param name="freq" value="50.0"/>
    <param name="sensor_timeout" value="1.0"/>
    <param name="odom_used" value="true"/>
    <param name="imu_used" value="true"/>
    <param name="vo_used" value="false"/>
    <param name="gps_used" value="false"/>
    <param name="debug" value="false"/>
    <param name="self_diagnose" value="false"/>
  </node>
  <!-- Add AMCL example for differential drive robots for Localization -->
  <!-- Subscribe: /scan, /tf, /initialpose, /map -->
  <!-- Publish: /amcl_pose, /particlecloud, /tf -->
  <include file="$(find mobile_manipulator_body)/launch/diff_amcl.launch"/>  
	
  <!-- Move Base Node -->
  <!-- Subscribe: /tf, /map, /scan, /odom, /move_base_simple/goal -->
  <!-- Publish: /cmd_vel -->
  <remap from="cmd_vel" to="/robot_base_velocity_controller/cmd_vel"/>
  <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
    <rosparam file="$(find mobile_manipulator_body)/param/costmap_common_params.yaml" command="load" ns="global_costmap" />
    <rosparam file="$(find mobile_manipulator_body)/param/costmap_common_params.yaml" command="load" ns="local_costmap" />
    <rosparam file="$(find mobile_manipulator_body)/param/local_costmap_params.yaml" command="load" ns="local_costmap" />
    <rosparam file="$(find mobile_manipulator_body)/param/global_costmap_params.yaml" command="load" ns="global_costmap" />
    <rosparam file="$(find mobile_manipulator_body)/param/base_local_planner_params.yaml" command="load" />
  </node>
</launch>


